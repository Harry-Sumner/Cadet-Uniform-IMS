@page
@model Cadet_Uniform_IMS.Pages.StockCRUD.IndexModel

@{
    ViewData["Title"] = "Index";
}

<head>
    <link rel='stylesheet' href="~/css/StockPage.css">
</head>
<body>
    <!-- Code adapted from W3Schools(n.d.-a) -->
    <div id="btn_container">
        <button class="btn active" onclick="filterSelection('all')"> Show all</button>
        @foreach (var type in Model.UniformTypes)
        {
            <button class="btn" onclick="filterSelection('@type.TypeName')"> @type.TypeName</button>
        }
    </div>
    <div>
        <a asp-page="Create">Add New</a>
    </div>

    <div class="uniform">
        @foreach (var item in Model.Stock)
        {
            @foreach (var uniform in Model.Uniform.Where(i => i.UniformID == item.UniformID))
            {
                <div class="item @(string.Join(" ", Model.UniformTypes.Where(i => i.TypeID == uniform.TypeID).Select(t => t.TypeName)))">
                    <div class="content">
                        @{
                            try
                            {
                                <img src="@string.Format("data:image/jpg;base64, {0}", Convert.ToBase64String(uniform.ImageData))" alt="@Html.DisplayFor(modelItem => uniform.Name)" style="width:12vw; height:15vw; max-height: 250px; max-width: 400px" />
                            } //Try converting data inside sql database into an image, if there are issues then a thumbnail image is used instead
                            catch
                            {
                                <img class="img-thumb" src="~/images/empty.png" alt="No Image Provided" style="width:12vw; height:15vw; max-height: 250px; max-width: 400px" />
                            }
                        }

                        <h4>@uniform.Name</h4>
                        @foreach (var attributes in Model.SizeAttributes.Where(i => i.TypeID == uniform.TypeID))
                        {
                            var sizes = string.Join(", ", Model.StockSizes.Where(i => i.StockID == item.StockID && i.AttributeID == attributes.AttributeID).Select(s => s.Size).Distinct());

                            <h5>@attributes.AttributeName: @sizes</h5>
                        }
                        <p style="color:darkgreen">Quantity: @item.Quantity</p>
                    </div>
                </div>
            }
        }
    </div>

    <script>
        //Code adapted from W3Schools(n.d.-a)
        filterSelection("all"); // Calls the filter selection function with 'all' parameter

        function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName("item");

            if (c == "all") c = "";

            // Loop through all items and apply filtering
            for (i = 0; i < x.length; i++) {
                RemoveClass(x[i], "display");
                if (x[i].className.indexOf(c) > -1) AddClass(x[i], "display");
            }
        }

        // Add class to display filtered items
        function AddClass(element, name) {
            var arr1 = element.className.split(" ");
            var arr2 = name.split(" ");
            for (var i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) {
                    element.className += " " + arr2[i];
                }
            }
        }

        // Remove class to hide unselected items
        function RemoveClass(element, name) {
            var arr1 = element.className.split(" ");
            var arr2 = name.split(" ");
            for (var i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
                    arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join(" ");
        }

        // Add "active" class to the clicked button
        var btnContainer = document.getElementById("btn_container");
        var btns = btnContainer.getElementsByClassName("btn");

        for (var i = 0; i < btns.length; i++) {
            btns[i].addEventListener("click", function () {
                var current = document.getElementsByClassName("active");
                if (current.length > 0) {
                    current[0].className = current[0].className.replace(" active", "");
                }
                this.className += " active";
            });
        }
    </script>
</body>