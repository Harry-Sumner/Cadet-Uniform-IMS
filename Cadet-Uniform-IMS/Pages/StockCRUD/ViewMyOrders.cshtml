@page
@model ViewMyOrdersModel

@{
    ViewData["Title"] = "My Orders";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
</div>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-success" role="alert">
        @Model.Message
    </div>
}

@if (User.IsInRole("Cadet"))
{
    <ul class="nav nav-tabs mb-3" id="orderTabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="pending-tab" data-toggle="tab" href="#pending" role="tab">Pending Orders</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="history-tab" data-toggle="tab" href="#orders" role="tab">Order History</a>
        </li>
    </ul>
}

<div class="tab-content" id="orderTabsContent">
    @if (User.IsInRole("Cadet"))
    {
        <div class="tab-pane fade show active" id="pending" role="tabpanel">
            <input type="text" class="form-control mb-3" placeholder="Search pending orders by uniform name..." onkeyup="filterOrders(this, 'pending')">
            @if (Model.PendingOrders.Any())
            {
                @foreach (var order in Model.PendingOrders)
                {
                    var itemUniforms = new List<string>();
                    foreach (var item in Model.PendingOrderItems.Where(i => i.PendingOrderID == order.PendingOrderID))
                    {
                        var stock = Model.Stock.FirstOrDefault(s => s.StockID == item.StockID);
                        var uniform = Model.Uniform.FirstOrDefault(u => u.UniformID == stock?.UniformID);
                        if (uniform != null)
                        {
                            itemUniforms.Add(uniform.Name.ToLowerInvariant());
                        }
                    }

                    var uniformNames = string.Join(" ", itemUniforms);

                    <div class="card mb-3 order-card" data-uniforms="@uniformNames">
                        <div class="card-body">
                            <h6>Pending Order ID: @order.PendingOrderID</h6>
                            <ul class="list-unstyled ms-3">
                                @foreach (var item in Model.PendingOrderItems.Where(i => i.PendingOrderID == order.PendingOrderID))
                                {
                                    var stock = Model.Stock.FirstOrDefault(s => s.StockID == item.StockID);
                                    var uniform = Model.Uniform.FirstOrDefault(u => u.UniformID == stock?.UniformID);
                                    <li>
                                        @uniform?.Name (@item.Quantity)
                                        @foreach (var stockSize in Model.StockSizes.Where(s => s.StockID == item.StockID))
                                        {
                                            foreach (var attributes in Model.SizeAttributes.Where(sa => sa.AttributeID == stockSize.AttributeID))
                                            {
                                                <span> @attributes.AttributeName: @stockSize.Size </span>
                                            }
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">No pending orders found.</div>
            }
        </div>
    }

    <div class="tab-pane @(User.IsInRole("Cadet") ? "fade" : "fade show active")" id="orders" role="tabpanel">
        <input type="text" class="form-control mb-3" placeholder="Search order history by uniform name..." onkeyup="filterOrders(this, 'orders')">
        @if (Model.UserOrders.Any())
        {
            @foreach (var order in Model.UserOrders)
            {
                var itemUniforms = new List<string>();
                foreach (var item in Model.OrderItems.Where(i => i.OrderID == order.OrderID))
                {
                    var stock = Model.Stock.FirstOrDefault(s => s.StockID == item.StockID);
                    var uniform = Model.Uniform.FirstOrDefault(u => u.UniformID == stock?.UniformID);
                    if (uniform != null)
                    {
                        itemUniforms.Add(uniform.Name.ToLowerInvariant());
                    }
                }

                var uniformNames = string.Join(" ", itemUniforms);

                <div class="card mb-3 order-card" data-uniforms="@uniformNames">
                    <div class="card-body">
                        <h6>Order ID: @order.OrderID</h6>
                        <ul class="list-unstyled ms-3">
                            @foreach (var item in Model.OrderItems.Where(i => i.OrderID == order.OrderID))
                            {
                                var stock = Model.Stock.FirstOrDefault(s => s.StockID == item.StockID);
                                var uniform = Model.Uniform.FirstOrDefault(u => u.UniformID == stock?.UniformID);
                                <li>
                                    @uniform?.Name (@item.Quantity)
                                    @foreach (var stockSize in Model.StockSizes.Where(s => s.StockID == item.StockID))
                                    {
                                        foreach (var attributes in Model.SizeAttributes.Where(sa => sa.AttributeID == stockSize.AttributeID))
                                        {
                                            <span> @attributes.AttributeName: @stockSize.Size </span>
                                        }
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-info">No orders found.</div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function filterOrders(input, tabId) {
            const filter = input.value.toLowerCase();
            const cards = document.querySelectorAll(`#${tabId} .order-card`);
            cards.forEach(card => {
                const uniforms = card.dataset.uniforms || '';
                card.style.display = uniforms.includes(filter) ? '' : 'none';
            });
        }

        $(document).ready(function () {
            $('#orderTabs a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
        });
    </script>
}